
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.30+48 (git sha1 14d50a176d5, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openlane/designs/mult_comb_32x32/src/mult_comb_32x32.v
Parsing SystemVerilog input from `/openlane/designs/mult_comb_32x32/src/mult_comb_32x32.v' to AST representation.
Generating RTLIL representation for module `\mult_comb_32x32'.
Successfully finished Verilog frontend.

2. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/mult_comb_32x32/runs/first_run/tmp/synthesis/hierarchy.dot'.
Dumping module mult_comb_32x32 to page 1.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \mult_comb_32x32

3.2. Analyzing design hierarchy..
Top module:  \mult_comb_32x32
Removed 0 unused modules.

4. Executing TRIBUF pass.

5. Executing HIERARCHY pass (managing design hierarchy).

5.1. Analyzing design hierarchy..
Top module:  \mult_comb_32x32

5.2. Analyzing design hierarchy..
Top module:  \mult_comb_32x32
Removed 0 unused modules.

6. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

9. Executing PROC_INIT pass (extract init attributes).

10. Executing PROC_ARST pass (detect async resets in processes).

11. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

12. Executing PROC_MUX pass (convert decision trees to multiplexers).

13. Executing PROC_DLATCH pass (convert process syncs to latches).

14. Executing PROC_DFF pass (convert process syncs to FFs).

15. Executing PROC_MEMWR pass (convert process memory writes to cells).

16. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

17. Executing CHECK pass (checking for obvious problems).
Checking module mult_comb_32x32...
Found and reported 0 problems.

18. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

19. Executing FLATTEN pass (flatten design).

20. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

22. Executing OPT pass (performing simple optimizations).

22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mult_comb_32x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mult_comb_32x32.
Performed a total of 0 changes.

22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

22.6. Executing OPT_DFF pass (perform DFF optimizations).

22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

22.9. Finished OPT passes. (There is nothing left to do.)

23. Executing FSM pass (extract and optimize FSM).

23.1. Executing FSM_DETECT pass (finding FSMs in design).

23.2. Executing FSM_EXTRACT pass (extracting FSM from design).

23.3. Executing FSM_OPT pass (simple optimizations of FSMs).

23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

23.5. Executing FSM_OPT pass (simple optimizations of FSMs).

23.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

23.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

23.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

24. Executing OPT pass (performing simple optimizations).

24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mult_comb_32x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mult_comb_32x32.
Performed a total of 0 changes.

24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

24.6. Executing OPT_DFF pass (perform DFF optimizations).

24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

24.9. Finished OPT passes. (There is nothing left to do.)

25. Executing WREDUCE pass (reducing word size of cells).
Removed top 32 bits (of 64) from port A of cell mult_comb_32x32.$mul$/openlane/designs/mult_comb_32x32/src/mult_comb_32x32.v:14$1 ($mul).
Removed top 32 bits (of 64) from port B of cell mult_comb_32x32.$mul$/openlane/designs/mult_comb_32x32/src/mult_comb_32x32.v:14$1 ($mul).

26. Executing PEEPOPT pass (run peephole optimizers).

27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

28. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module mult_comb_32x32:
  creating $macc model for $mul$/openlane/designs/mult_comb_32x32/src/mult_comb_32x32.v:14$1 ($mul).
  creating $macc cell for $mul$/openlane/designs/mult_comb_32x32/src/mult_comb_32x32.v:14$1: $auto$alumacc.cc:365:replace_macc$2
  created 0 $alu and 1 $macc cells.

29. Executing SHARE pass (SAT-based resource sharing).

30. Executing OPT pass (performing simple optimizations).

30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mult_comb_32x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mult_comb_32x32.
Performed a total of 0 changes.

30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

30.6. Executing OPT_DFF pass (perform DFF optimizations).

30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

30.9. Finished OPT passes. (There is nothing left to do.)

31. Executing MEMORY pass.

31.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

31.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

31.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

31.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

31.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

31.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

31.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

31.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

31.10. Executing MEMORY_COLLECT pass (generating $mem cells).

32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

33.3. Executing OPT_DFF pass (perform DFF optimizations).

33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

33.5. Finished fast OPT passes.

34. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

35. Executing OPT pass (performing simple optimizations).

35.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

35.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

35.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mult_comb_32x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

35.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mult_comb_32x32.
Performed a total of 0 changes.

35.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

35.6. Executing OPT_SHARE pass.

35.7. Executing OPT_DFF pass (perform DFF optimizations).

35.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

35.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

35.10. Finished OPT passes. (There is nothing left to do.)

36. Executing TECHMAP pass (map to technology primitives).

36.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

36.2. Continuing TECHMAP pass.
Using extmapper maccmap for cells of type $macc.
  add \mplier * \mcand (32x32 bits, unsigned)
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000001000000 for cells of type $fa.
Using template $paramod$039520c137afc9cd69dd56c3fb11a4e1fbe5f664\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~793 debug messages>

37. Executing OPT pass (performing simple optimizations).

37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.
<suppressed ~5913 debug messages>

37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

37.3. Executing OPT_DFF pass (perform DFF optimizations).

37.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..
Removed 78 unused cells and 372 unused wires.
<suppressed ~79 debug messages>

37.5. Finished fast OPT passes.

38. Executing ABC pass (technology mapping using ABC).

38.1. Extracting gate netlist of module `\mult_comb_32x32' to `<abc-temp-dir>/input.blif'..
Extracted 6277 gates and 6341 wires to a netlist network with 64 inputs and 64 outputs.

38.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

38.1.2. Re-integrating ABC results.
ABC RESULTS:               NOT cells:      128
ABC RESULTS:              NAND cells:      389
ABC RESULTS:             ORNOT cells:       80
ABC RESULTS:                OR cells:      735
ABC RESULTS:               NOR cells:      165
ABC RESULTS:            ANDNOT cells:     1936
ABC RESULTS:               AND cells:      892
ABC RESULTS:               XOR cells:     1587
ABC RESULTS:              XNOR cells:      493
ABC RESULTS:        internal signals:     6213
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       64
Removing temp directory.

39. Executing OPT pass (performing simple optimizations).

39.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

39.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

39.3. Executing OPT_DFF pass (perform DFF optimizations).

39.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..
Removed 0 unused cells and 501 unused wires.
<suppressed ~1 debug messages>

39.5. Finished fast OPT passes.

40. Executing HIERARCHY pass (managing design hierarchy).

40.1. Analyzing design hierarchy..
Top module:  \mult_comb_32x32

40.2. Analyzing design hierarchy..
Top module:  \mult_comb_32x32
Removed 0 unused modules.

41. Printing statistics.

=== mult_comb_32x32 ===

   Number of wires:               6347
   Number of wire bits:           6661
   Number of public wires:           6
   Number of public wire bits:     320
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6405
     $_ANDNOT_                    1936
     $_AND_                        892
     $_NAND_                       389
     $_NOR_                        165
     $_NOT_                        128
     $_ORNOT_                       80
     $_OR_                         735
     $_XNOR_                       493
     $_XOR_                       1587

42. Executing CHECK pass (checking for obvious problems).
Checking module mult_comb_32x32...
Found and reported 0 problems.

43. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/mult_comb_32x32/runs/first_run/tmp/synthesis/post_techmap.dot'.
Dumping module mult_comb_32x32 to page 1.

44. Executing SHARE pass (SAT-based resource sharing).

45. Executing OPT pass (performing simple optimizations).

45.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

45.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

45.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \mult_comb_32x32..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

45.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \mult_comb_32x32.
Performed a total of 0 changes.

45.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\mult_comb_32x32'.
Removed a total of 0 cells.

45.6. Executing OPT_DFF pass (perform DFF optimizations).

45.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..

45.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module mult_comb_32x32.

45.9. Finished OPT passes. (There is nothing left to do.)

46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..
Removed 0 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

47. Printing statistics.

=== mult_comb_32x32 ===

   Number of wires:               6344
   Number of wire bits:           6469
   Number of public wires:           3
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6405
     $_ANDNOT_                    1936
     $_AND_                        892
     $_NAND_                       389
     $_NOR_                        165
     $_NOT_                        128
     $_ORNOT_                       80
     $_OR_                         735
     $_XNOR_                       493
     $_XOR_                       1587

mapping tbuf

48. Executing TECHMAP pass (map to technology primitives).

48.1. Executing Verilog-2005 frontend: /home/brunoayala/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/brunoayala/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

48.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

49. Executing SIMPLEMAP pass (map simple cells to gate primitives).

50. Executing TECHMAP pass (map to technology primitives).

50.1. Executing Verilog-2005 frontend: /home/brunoayala/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/brunoayala/.volare/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

50.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

51. Executing SIMPLEMAP pass (map simple cells to gate primitives).

52. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

52.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\mult_comb_32x32':

53. Printing statistics.

=== mult_comb_32x32 ===

   Number of wires:               6344
   Number of wire bits:           6469
   Number of public wires:           3
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6405
     $_ANDNOT_                    1936
     $_AND_                        892
     $_NAND_                       389
     $_NOR_                        165
     $_NOT_                        128
     $_ORNOT_                       80
     $_OR_                         735
     $_XNOR_                       493
     $_XOR_                       1587

[INFO]: USING STRATEGY AREA 0

54. Executing ABC pass (technology mapping using ABC).

54.1. Extracting gate netlist of module `\mult_comb_32x32' to `/tmp/yosys-abc-7R4lfu/input.blif'..
Extracted 6405 gates and 6469 wires to a netlist network with 64 inputs and 64 outputs.

54.1.1. Executing ABC.
Running ABC command: "/build/bin/yosys-abc" -s -f /tmp/yosys-abc-7R4lfu/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-7R4lfu/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-7R4lfu/input.blif 
ABC: + read_lib -w /openlane/designs/mult_comb_32x32/runs/first_run/tmp/synthesis/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.07 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130A_merged" from "/openlane/designs/mult_comb_32x32/runs/first_run/tmp/synthesis/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.10 sec
ABC: Memory =    9.54 MB. Time =     0.10 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openlane/designs/mult_comb_32x32/runs/first_run/tmp/synthesis/synthesis.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_2".
ABC: Setting output load to be 33.442001.
ABC: + read_constr /openlane/designs/mult_comb_32x32/runs/first_run/tmp/synthesis/synthesis.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 100000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 100000.0 
ABC: + &get -n 
ABC: + &st 
ABC: + &dch 
ABC: + &nf 
ABC: + &put 
ABC: + buffer -N 10 -S 750.0 
ABC: + upsize -D 100000.0 
ABC: Current delay (8117.57 ps) does not exceed the target delay (100000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 100000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   5764 (  8.7 %)   Cap = 10.0 ff (  2.0 %)   Area =    55353.09 ( 91.3 %)   Delay =  8956.56 ps  (  0.8 %)               
ABC: Path  0 --      51 : 0    3 pi                        A =   0.00  Df =  22.0  -12.8 ps  S =  36.1 ps  Cin =  0.0 ff  Cout =   6.3 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    2048 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 304.8 -120.1 ps  S = 342.5 ps  Cin =  2.1 ff  Cout =  28.7 ff  Cmax = 130.0 ff  G = 1304  
ABC: Path  2 --    2838 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 654.1 -229.5 ps  S = 362.6 ps  Cin =  2.1 ff  Cout =  30.6 ff  Cmax = 130.0 ff  G = 1384  
ABC: Path  3 --    3787 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1015.4 -341.5 ps  S = 378.1 ps  Cin =  2.1 ff  Cout =  31.9 ff  Cmax = 130.0 ff  G = 1455  
ABC: Path  4 --    4139 : 1   10 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1435.8 -478.8 ps  S = 461.8 ps  Cin =  2.1 ff  Cout =  39.3 ff  Cmax = 130.0 ff  G = 1805  
ABC: Path  5 --    4140 : 2    1 sky130_fd_sc_hd__nand2_2  A =   6.26  Df =1551.1 -446.8 ps  S = 112.8 ps  Cin =  4.4 ff  Cout =   8.5 ff  Cmax = 295.7 ff  G =  184  
ABC: Path  6 --    4141 : 2    2 sky130_fd_sc_hd__xor2_2   A =  16.27  Df =1723.1 -456.2 ps  S = 138.0 ps  Cin =  8.6 ff  Cout =   7.0 ff  Cmax = 130.0 ff  G =   78  
ABC: Path  7 --    4151 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =1926.0 -255.9 ps  S =  58.1 ps  Cin =  2.4 ff  Cout =   8.7 ff  Cmax = 309.5 ff  G =  354  
ABC: Path  8 --    4153 : 3    2 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =2142.5 -204.3 ps  S =  48.2 ps  Cin =  2.4 ff  Cout =   6.6 ff  Cmax = 309.5 ff  G =  270  
ABC: Path  9 --    4154 : 3    5 sky130_fd_sc_hd__and3_2   A =   7.51  Df =2381.2 -156.3 ps  S = 102.3 ps  Cin =  1.5 ff  Cout =  15.7 ff  Cmax = 309.5 ff  G =  998  
ABC: Path 10 --    4156 : 4    4 sky130_fd_sc_hd__or4_2    A =   8.76  Df =3082.3 -605.1 ps  S = 161.1 ps  Cin =  1.5 ff  Cout =  20.7 ff  Cmax = 310.4 ff  G = 1327  
ABC: Path 11 --    4158 : 3    3 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =3333.3 -638.6 ps  S =  65.0 ps  Cin =  2.4 ff  Cout =  10.3 ff  Cmax = 309.5 ff  G =  427  
ABC: Path 12 --    4198 : 4    3 sky130_fd_sc_hd__and4_2   A =  10.01  Df =3528.5  -22.2 ps  S =  86.0 ps  Cin =  1.5 ff  Cout =   9.7 ff  Cmax = 300.3 ff  G =  599  
ABC: Path 13 --    4201 : 4    3 sky130_fd_sc_hd__o211a_2  A =  10.01  Df =3803.7  -50.2 ps  S =  74.8 ps  Cin =  2.4 ff  Cout =   8.9 ff  Cmax = 268.3 ff  G =  354  
ABC: Path 14 --    4265 : 4    2 sky130_fd_sc_hd__or4_2    A =   8.76  Df =4467.8 -504.3 ps  S = 117.0 ps  Cin =  1.5 ff  Cout =   7.0 ff  Cmax = 310.4 ff  G =  448  
ABC: Path 15 --    4371 : 4    4 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =4859.6 -698.4 ps  S =  79.0 ps  Cin =  2.4 ff  Cout =  13.9 ff  Cmax = 325.0 ff  G =  571  
ABC: Path 16 --    4374 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =5173.9 -443.6 ps  S =  59.3 ps  Cin =  2.4 ff  Cout =   7.0 ff  Cmax = 325.0 ff  G =  285  
ABC: Path 17 --    4376 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =5517.7 -356.1 ps  S =  59.4 ps  Cin =  2.4 ff  Cout =   7.1 ff  Cmax = 325.0 ff  G =  289  
ABC: Path 18 --    4378 : 3    2 sky130_fd_sc_hd__a21o_2   A =   8.76  Df =5738.9 -278.3 ps  S =  49.9 ps  Cin =  2.4 ff  Cout =   6.6 ff  Cmax = 309.5 ff  G =  269  
ABC: Path 19 --    4380 : 3    3 sky130_fd_sc_hd__and3_2   A =   7.51  Df =5942.9 -114.0 ps  S =  67.9 ps  Cin =  1.5 ff  Cout =   8.1 ff  Cmax = 309.5 ff  G =  519  
ABC: Path 20 --    4382 : 2    4 sky130_fd_sc_hd__or2_2    A =   6.26  Df =6279.2 -282.8 ps  S =  88.1 ps  Cin =  1.5 ff  Cout =  15.0 ff  Cmax = 299.4 ff  G =  990  
ABC: Path 21 --    4823 : 4    2 sky130_fd_sc_hd__and4b_2  A =  11.26  Df =6592.3 -348.7 ps  S =  84.3 ps  Cin =  1.6 ff  Cout =   9.2 ff  Cmax = 297.6 ff  G =  571  
ABC: Path 22 --    5190 : 2    2 sky130_fd_sc_hd__nand2_2  A =   6.26  Df =6648.1 -297.0 ps  S =  53.2 ps  Cin =  4.4 ff  Cout =   6.2 ff  Cmax = 295.7 ff  G =  134  
ABC: Path 23 --    5191 : 4    3 sky130_fd_sc_hd__or4b_2   A =  10.01  Df =7287.4 -596.2 ps  S = 124.0 ps  Cin =  1.5 ff  Cout =   8.6 ff  Cmax = 265.5 ff  G =  567  
ABC: Path 24 --    5707 : 5    3 sky130_fd_sc_hd__a2111o_2 A =  12.51  Df =7750.4 -892.4 ps  S =  79.4 ps  Cin =  2.4 ff  Cout =   8.5 ff  Cmax = 324.1 ff  G =  340  
ABC: Path 25 --    5821 : 4    2 sky130_fd_sc_hd__a211o_2  A =  10.01  Df =8062.6-1075.9 ps  S =  57.3 ps  Cin =  2.4 ff  Cout =   6.1 ff  Cmax = 325.0 ff  G =  252  
ABC: Path 26 --    5847 : 3    4 sky130_fd_sc_hd__a21oi_2  A =   8.76  Df =8288.6-1229.2 ps  S = 226.1 ps  Cin =  4.6 ff  Cout =  16.5 ff  Cmax = 128.2 ff  G =  341  
ABC: Path 27 --    5877 : 5    1 sky130_fd_sc_hd__o311ai_2 A =  16.27  Df =8413.8-1101.4 ps  S = 212.5 ps  Cin =  4.4 ff  Cout =   3.4 ff  Cmax =  82.4 ff  G =   72  
ABC: Path 28 --    5878 : 3    1 sky130_fd_sc_hd__mux2_2   A =  11.26  Df =8737.7-1146.6 ps  S =  45.5 ps  Cin =  2.3 ff  Cout =   2.2 ff  Cmax = 297.6 ff  G =   92  
ABC: Path 29 --    5879 : 1    1 sky130_fd_sc_hd__buf_1    A =   3.75  Df =8956.6-1045.0 ps  S = 396.4 ps  Cin =  2.1 ff  Cout =  33.4 ff  Cmax = 130.0 ff  G = 1590  
ABC: Start-point = pi50 (\mplier [25]).  End-point = po57 (\product [63]).
ABC: + print_stats -m 
ABC: netlist                       : i/o =   64/   64  lat =    0  nd =  5764  edge =  16605  area =55358.51  delay =31.00  lev = 31
ABC: + write_blif /tmp/yosys-abc-7R4lfu/output.blif 

54.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a32oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32a_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nand4b_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nand3b_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__or4bb_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__nor3b_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__nor4_2 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_2 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__or4b_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a221oi_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a21boi_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__o32ai_2 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_2 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nand4_2 cells:      259
ABC RESULTS:   sky130_fd_sc_hd__and4bb_2 cells:       45
ABC RESULTS:   sky130_fd_sc_hd__a41o_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a211oi_2 cells:      170
ABC RESULTS:   sky130_fd_sc_hd__o2bb2a_2 cells:       42
ABC RESULTS:   sky130_fd_sc_hd__and4b_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__o21bai_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:       71
ABC RESULTS:   sky130_fd_sc_hd__a2111o_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o311a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      357
ABC RESULTS:   sky130_fd_sc_hd__a32o_2 cells:       65
ABC RESULTS:   sky130_fd_sc_hd__a21o_2 cells:      358
ABC RESULTS:   sky130_fd_sc_hd__o21ba_2 cells:       29
ABC RESULTS:   sky130_fd_sc_hd__o211a_2 cells:      179
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:       69
ABC RESULTS:   sky130_fd_sc_hd__o21a_2 cells:       63
ABC RESULTS:   sky130_fd_sc_hd__a31o_2 cells:       54
ABC RESULTS:   sky130_fd_sc_hd__a31oi_2 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__and4_2 cells:      165
ABC RESULTS:   sky130_fd_sc_hd__and3_2 cells:      243
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:       97
ABC RESULTS:   sky130_fd_sc_hd__a21oi_2 cells:      187
ABC RESULTS:   sky130_fd_sc_hd__nand3_2 cells:      334
ABC RESULTS:   sky130_fd_sc_hd__and2b_2 cells:      109
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:      154
ABC RESULTS:   sky130_fd_sc_hd__a211o_2 cells:      167
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:      366
ABC RESULTS:   sky130_fd_sc_hd__o21ai_2 cells:       76
ABC RESULTS:   sky130_fd_sc_hd__xor2_2 cells:      232
ABC RESULTS:   sky130_fd_sc_hd__o31a_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a21bo_2 cells:      167
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:       70
ABC RESULTS:   sky130_fd_sc_hd__o311ai_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__and3b_2 cells:       15
ABC RESULTS:   sky130_fd_sc_hd__a22oi_2 cells:       96
ABC RESULTS:   sky130_fd_sc_hd__xnor2_2 cells:      352
ABC RESULTS:   sky130_fd_sc_hd__nor2_2 cells:      194
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:      168
ABC RESULTS:   sky130_fd_sc_hd__and2_2 cells:      165
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      433
ABC RESULTS:        internal signals:     6341
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       64
Removing temp directory.

55. Executing SETUNDEF pass (replace undef values with defined constants).

56. Executing HILOMAP pass (mapping to constant drivers).

57. Executing SPLITNETS pass (splitting up multi-bit signals).

58. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \mult_comb_32x32..
Removed 0 unused cells and 6469 unused wires.
<suppressed ~1 debug messages>

59. Executing INSBUF pass (insert buffer cells for connected wires).

60. Executing CHECK pass (checking for obvious problems).
Checking module mult_comb_32x32...
Warning: Wire mult_comb_32x32.\product [63] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [62] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [61] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [60] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [59] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [58] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [57] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [56] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [55] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [54] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [53] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [52] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [51] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [50] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [49] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [48] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [47] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [46] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [45] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [44] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [43] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [42] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [41] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [40] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [39] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [38] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [37] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [36] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [35] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [34] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [33] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [32] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [31] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [30] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [29] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [28] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [27] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [26] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [25] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [24] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [23] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [22] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [21] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [20] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [19] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [18] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [17] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [16] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [15] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [14] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [13] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [12] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [11] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [10] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [9] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [8] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [7] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [6] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [5] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [4] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [3] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [2] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [1] is used but has no driver.
Warning: Wire mult_comb_32x32.\product [0] is used but has no driver.
Found and reported 64 problems.

61. Printing statistics.

=== mult_comb_32x32 ===

   Number of wires:               5703
   Number of wire bits:           5828
   Number of public wires:           3
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5764
     sky130_fd_sc_hd__a2111o_2       1
     sky130_fd_sc_hd__a2111oi_2      1
     sky130_fd_sc_hd__a211o_2      167
     sky130_fd_sc_hd__a211oi_2     170
     sky130_fd_sc_hd__a21bo_2      167
     sky130_fd_sc_hd__a21boi_2      18
     sky130_fd_sc_hd__a21o_2       358
     sky130_fd_sc_hd__a21oi_2      187
     sky130_fd_sc_hd__a221oi_2       1
     sky130_fd_sc_hd__a22o_2       357
     sky130_fd_sc_hd__a22oi_2       96
     sky130_fd_sc_hd__a2bb2o_2      11
     sky130_fd_sc_hd__a2bb2oi_2      6
     sky130_fd_sc_hd__a31o_2        54
     sky130_fd_sc_hd__a31oi_2        9
     sky130_fd_sc_hd__a32o_2        65
     sky130_fd_sc_hd__a32oi_2        1
     sky130_fd_sc_hd__a41o_2        11
     sky130_fd_sc_hd__and2_2       165
     sky130_fd_sc_hd__and2b_2      109
     sky130_fd_sc_hd__and3_2       243
     sky130_fd_sc_hd__and3b_2       15
     sky130_fd_sc_hd__and4_2       165
     sky130_fd_sc_hd__and4b_2       13
     sky130_fd_sc_hd__and4bb_2      45
     sky130_fd_sc_hd__buf_1        433
     sky130_fd_sc_hd__inv_2         70
     sky130_fd_sc_hd__mux2_2         1
     sky130_fd_sc_hd__nand2_2      366
     sky130_fd_sc_hd__nand3_2      334
     sky130_fd_sc_hd__nand3b_2       3
     sky130_fd_sc_hd__nand4_2      259
     sky130_fd_sc_hd__nand4b_2       1
     sky130_fd_sc_hd__nor2_2       194
     sky130_fd_sc_hd__nor3_2        71
     sky130_fd_sc_hd__nor3b_2        4
     sky130_fd_sc_hd__nor4_2        22
     sky130_fd_sc_hd__o2111ai_2      1
     sky130_fd_sc_hd__o211a_2      179
     sky130_fd_sc_hd__o211ai_2     154
     sky130_fd_sc_hd__o21a_2        63
     sky130_fd_sc_hd__o21ai_2       76
     sky130_fd_sc_hd__o21ba_2       29
     sky130_fd_sc_hd__o21bai_2      16
     sky130_fd_sc_hd__o22a_2        11
     sky130_fd_sc_hd__o22ai_2       18
     sky130_fd_sc_hd__o2bb2a_2      42
     sky130_fd_sc_hd__o311a_2        1
     sky130_fd_sc_hd__o311ai_2       3
     sky130_fd_sc_hd__o31a_2         5
     sky130_fd_sc_hd__o32a_2         2
     sky130_fd_sc_hd__o32ai_2        2
     sky130_fd_sc_hd__or2_2        168
     sky130_fd_sc_hd__or2b_2        97
     sky130_fd_sc_hd__or3_2         69
     sky130_fd_sc_hd__or3b_2        11
     sky130_fd_sc_hd__or4_2         23
     sky130_fd_sc_hd__or4b_2         2
     sky130_fd_sc_hd__or4bb_2       15
     sky130_fd_sc_hd__xnor2_2      352
     sky130_fd_sc_hd__xor2_2       232

   Chip area for module '\mult_comb_32x32': 55353.088000

62. Executing Verilog backend.
Dumping module `\mult_comb_32x32'.

Warnings: 64 unique messages, 64 total
End of script. Logfile hash: 2bb6c7d887, CPU: user 4.62s system 0.04s, MEM: 45.80 MB peak
Yosys 0.30+48 (git sha1 14d50a176d5, gcc 8.3.1 -fPIC -Os)
Time spent: 78% 2x abc (15 sec), 6% 2x write_verilog (1 sec), ...
